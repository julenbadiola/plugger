version: '3.8'
services:
  proxy:
    container_name: traefik
    image: traefik:v2.2
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable Docker Swarm mode
      - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true
        # Use the traefik-public network (declared below)
        - traefik.docker.network=${NETWORK_NAME}
        # Use the custom label "traefik.constraint-label=traefik-public"
        # This public Traefik will only use services with this label
        # traefik-http set up only to use the middleware to redirect to https
        - traefik.http.middlewares.tfm-https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.tfm-https-redirect.redirectscheme.permanent=true
        # Handle host with and without "www" to redirect to only one of them
        # Uses environment variable DOMAIN
        # To disable www redirection remove the Host() you want to discard, here and
        # below for HTTPS
        - traefik.http.routers.tfm-proxy-http.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
        - traefik.http.routers.tfm-proxy-http.entrypoints=http
        # traefik-https the actual router using HTTPS
        - traefik.http.routers.tfm-proxy-https.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
        - traefik.http.routers.tfm-proxy-https.entrypoints=https
        - traefik.http.routers.tfm-proxy-https.tls=true
        # Use the "le" (Let's Encrypt) resolver created below
        - traefik.http.routers.tfm-proxy-https.tls.certresolver=le
        # Define the port inside of the Docker service to use
        - traefik.http.services.tfm-proxy.loadbalancer.server.port=80
        # Handle domain with and without "www" to redirect to only one
        # To disable www redirection remove the next line
        - traefik.http.middlewares.tfm-www-redirect.redirectregex.regex=^https?://(www.)?(${DOMAIN?Variable not set})/(.*)
        # Redirect a domain with www to non-www
        # To disable it remove the next line
        - traefik.http.middlewares.tfm-www-redirect.redirectregex.replacement=https://${DOMAIN?Variable not set}/$${3}
        # Redirect a domain without www to www
        # To enable it remove the previous line and uncomment the next
        # - traefik.http.middlewares.${STACK_NAME}-www-redirect.redirectregex.replacement=https://www.${DOMAIN}/$${3}
        # Middleware to redirect www, to disable it remove the next line 
        - traefik.http.routers.tfm-proxy-https.middlewares=tfm-www-redirect
        # Middleware to redirect www, and redirect HTTP to HTTPS
        # to disable www redirection remove the section: tfm-www-redirect,
        - traefik.http.routers.tfm-proxy-http.middlewares=tfm-www-redirect,tfm-https-redirect

  plugger:
    image: badiolajulen/plugger:master
    container_name: plugger
    env_file: .env
    environment:
      - MODE=swarm
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - net
    # tiene que estar en manager para interactuar con el socket
    command: ./entry-prod.sh
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      # labels:
      #   - traefik.enable=true
      #   - traefik.docker.network=${NETWORK_NAME}
      #   - traefik.http.routers.tfm-plugger-http.rule=PathPrefix(`/`)
      #   - traefik.http.services.tfm-plugger.loadbalancer.server.port=5050

  # core:
  #   image: julenbadiola/core:master
  #   container_name: core
  #   build: ./core
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3000
  #   restart: always
  #   volumes:
  #     - ./core:/app
  #   networks:
  #     - net
  #   labels:
  #     - traefik.enable=true
  #     - traefik.docker.network=${NETWORK_NAME}
  #     - traefik.http.routers.tfm-core-http.rule=PathPrefix(`/`)
  #     - traefik.http.services.tfm-core.loadbalancer.server.port=3000

# variable network name https://github.com/docker/compose/issues/6808
networks:
  net:
    name: ${NETWORK_NAME}
    external: true